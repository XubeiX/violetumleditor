<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="34" passed="34">
  <reporter-output>
  </reporter-output>
  <suite name="Suite1" duration-ms="781" started-at="2015-12-26T12:15:48Z" finished-at="2015-12-26T12:15:49Z">
    <groups>
    </groups>
    <test name="XLineEdge" duration-ms="625" started-at="2015-12-26T12:15:48Z" finished-at="2015-12-26T12:15:49Z">
      <class name="ratajczak.test.XLineEdgeTest">
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="init" is-config="true" duration-ms="219" started-at="2015-12-26T13:15:48Z" finished-at="2015-12-26T13:15:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="BenStyleTest(com.horstmann.violet.product.diagram.abstracts.property.BentStyle, com.horstmann.violet.product.diagram.abstracts.property.BentStyle)[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="BenStyleTest" duration-ms="15" started-at="2015-12-26T13:15:48Z" data-provider="BentStyles" finished-at="2015-12-26T13:15:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.BentStyle.AUTO]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.BentStyle.AUTO]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BenStyleTest -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="init" is-config="true" duration-ms="0" started-at="2015-12-26T13:15:48Z" finished-at="2015-12-26T13:15:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="init" is-config="true" duration-ms="0" started-at="2015-12-26T13:15:48Z" finished-at="2015-12-26T13:15:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="init" is-config="true" duration-ms="0" started-at="2015-12-26T13:15:48Z" finished-at="2015-12-26T13:15:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="BenStyleTest(com.horstmann.violet.product.diagram.abstracts.property.BentStyle, com.horstmann.violet.product.diagram.abstracts.property.BentStyle)[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="BenStyleTest" duration-ms="0" started-at="2015-12-26T13:15:48Z" data-provider="BentStyles" finished-at="2015-12-26T13:15:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.BentStyle.HV]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.BentStyle.HV]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BenStyleTest -->
        <test-method status="PASS" signature="BenStyleTest(com.horstmann.violet.product.diagram.abstracts.property.BentStyle, com.horstmann.violet.product.diagram.abstracts.property.BentStyle)[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="BenStyleTest" duration-ms="0" started-at="2015-12-26T13:15:48Z" data-provider="BentStyles" finished-at="2015-12-26T13:15:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.BentStyle.STRAIGHT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.BentStyle.STRAIGHT]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BenStyleTest -->
        <test-method status="PASS" signature="BenStyleTest(com.horstmann.violet.product.diagram.abstracts.property.BentStyle, com.horstmann.violet.product.diagram.abstracts.property.BentStyle)[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="BenStyleTest" duration-ms="0" started-at="2015-12-26T13:15:48Z" data-provider="BentStyles" finished-at="2015-12-26T13:15:48Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.BentStyle.AUTO]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BenStyleTest -->
        <test-method status="PASS" signature="checkLable(java.lang.String, java.lang.String)[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="checkLable" duration-ms="0" started-at="2015-12-26T13:15:48Z" data-provider="LabelTest" finished-at="2015-12-26T13:15:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Artur]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Artur]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkLable -->
        <test-method status="PASS" signature="checkLable(java.lang.String, java.lang.String)[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="checkLable" duration-ms="0" started-at="2015-12-26T13:15:48Z" data-provider="LabelTest" finished-at="2015-12-26T13:15:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[label]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[label]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkLable -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="init" is-config="true" duration-ms="0" started-at="2015-12-26T13:15:48Z" finished-at="2015-12-26T13:15:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="checkLable(java.lang.String, java.lang.String)[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="checkLable" duration-ms="0" started-at="2015-12-26T13:15:48Z" data-provider="LabelTest" finished-at="2015-12-26T13:15:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkLable -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="init" is-config="true" duration-ms="0" started-at="2015-12-26T13:15:48Z" finished-at="2015-12-26T13:15:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="init" is-config="true" duration-ms="0" started-at="2015-12-26T13:15:48Z" finished-at="2015-12-26T13:15:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="checkLable(java.lang.String, java.lang.String)[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="checkLable" duration-ms="0" started-at="2015-12-26T13:15:48Z" data-provider="LabelTest" finished-at="2015-12-26T13:15:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[dwa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dwa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkLable -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="init" is-config="true" duration-ms="0" started-at="2015-12-26T13:15:48Z" finished-at="2015-12-26T13:15:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="init" is-config="true" duration-ms="0" started-at="2015-12-26T13:15:48Z" finished-at="2015-12-26T13:15:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="getConnectionPointsBetween2Class()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="getConnectionPointsBetween2Class" duration-ms="219" started-at="2015-12-26T13:15:48Z" description="Wymiary bloków ClassNode to 100x60. Wynik to skrajny punkt klasy startowej lub początkowej" finished-at="2015-12-26T13:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getConnectionPointsBetween2Class -->
        <test-method status="PASS" signature="getLineStyleShouldBeSOLID()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="getLineStyleShouldBeSOLID" duration-ms="16" started-at="2015-12-26T13:15:49Z" finished-at="2015-12-26T13:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getLineStyleShouldBeSOLID -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="init" is-config="true" duration-ms="0" started-at="2015-12-26T13:15:49Z" finished-at="2015-12-26T13:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="getNoExistingLine()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="getNoExistingLine" duration-ms="0" started-at="2015-12-26T13:15:49Z" description="Brak punktów by wyznaczyć linię" finished-at="2015-12-26T13:15:49Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.horstmann.violet.product.diagram.classes.edges.XLineEdge.getPointsForNodesOnDifferentLifeLines(XLineEdge.java:57)
	at com.horstmann.violet.product.diagram.classes.edges.XLineEdge.getPoints(XLineEdge.java:52)
	at com.horstmann.violet.product.diagram.classes.edges.XLineEdge.getConnectionPoints(XLineEdge.java:41)
	at ratajczak.test.XLineEdgeTest.getNoExistingLine(XLineEdgeTest.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:773)
	at org.testng.TestRunner.run(TestRunner.java:623)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1110)
	at org.testng.TestNG.run(TestNG.java:1018)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNoExistingLine -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="init" is-config="true" duration-ms="0" started-at="2015-12-26T13:15:49Z" finished-at="2015-12-26T13:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="isTransitionPointsSupportedShouldBeFALSE()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="isTransitionPointsSupportedShouldBeFALSE" duration-ms="0" started-at="2015-12-26T13:15:49Z" finished-at="2015-12-26T13:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isTransitionPointsSupportedShouldBeFALSE -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="init" is-config="true" duration-ms="0" started-at="2015-12-26T13:15:49Z" finished-at="2015-12-26T13:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="init" is-config="true" duration-ms="0" started-at="2015-12-26T13:15:49Z" finished-at="2015-12-26T13:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="privateMethodReturnedPointsTest()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="privateMethodReturnedPointsTest" duration-ms="0" started-at="2015-12-26T13:15:49Z" finished-at="2015-12-26T13:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- privateMethodReturnedPointsTest -->
        <test-method status="PASS" signature="getsAllNoExistingPoints()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="getsAllNoExistingPoints" duration-ms="0" started-at="2015-12-26T13:15:49Z" description="Brak jakichkolwiek punktów by je pobrać" finished-at="2015-12-26T13:15:49Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.horstmann.violet.product.diagram.classes.edges.XLineEdge.getPointsForNodesOnDifferentLifeLines(XLineEdge.java:57)
	at com.horstmann.violet.product.diagram.classes.edges.XLineEdge.getPoints(XLineEdge.java:52)
	at ratajczak.test.XLineEdgeTest.getsAllNoExistingPoints(XLineEdgeTest.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:773)
	at org.testng.TestRunner.run(TestRunner.java:623)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1110)
	at org.testng.TestNG.run(TestNG.java:1018)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getsAllNoExistingPoints -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="init" is-config="true" duration-ms="0" started-at="2015-12-26T13:15:49Z" finished-at="2015-12-26T13:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="shouldSetOnlyXandVEndArrowHead(com.horstmann.violet.product.diagram.abstracts.property.ArrowHead, com.horstmann.violet.product.diagram.abstracts.property.ArrowHead)[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="shouldSetOnlyXandVEndArrowHead" duration-ms="16" started-at="2015-12-26T13:15:49Z" data-provider="ArrowHeads" finished-at="2015-12-26T13:15:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.ArrowHead.HALF_V]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.ArrowHead.NONE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldSetOnlyXandVEndArrowHead -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="init" is-config="true" duration-ms="0" started-at="2015-12-26T13:15:49Z" finished-at="2015-12-26T13:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="shouldNotChangeLineStyle()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="shouldNotChangeLineStyle" duration-ms="0" started-at="2015-12-26T13:15:49Z" description="Nie powinno dać się zmienić stylu lini" finished-at="2015-12-26T13:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldNotChangeLineStyle -->
        <test-method status="PASS" signature="shouldSetOnlyXandVEndArrowHead(com.horstmann.violet.product.diagram.abstracts.property.ArrowHead, com.horstmann.violet.product.diagram.abstracts.property.ArrowHead)[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="shouldSetOnlyXandVEndArrowHead" duration-ms="0" started-at="2015-12-26T13:15:49Z" data-provider="ArrowHeads" finished-at="2015-12-26T13:15:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.ArrowHead.BLACK_DIAMOND]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.ArrowHead.NONE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldSetOnlyXandVEndArrowHead -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="init" is-config="true" duration-ms="0" started-at="2015-12-26T13:15:49Z" finished-at="2015-12-26T13:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="init" is-config="true" duration-ms="0" started-at="2015-12-26T13:15:49Z" finished-at="2015-12-26T13:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="init" is-config="true" duration-ms="0" started-at="2015-12-26T13:15:49Z" finished-at="2015-12-26T13:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="shouldSetOnlyXandVEndArrowHead(com.horstmann.violet.product.diagram.abstracts.property.ArrowHead, com.horstmann.violet.product.diagram.abstracts.property.ArrowHead)[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="shouldSetOnlyXandVEndArrowHead" duration-ms="0" started-at="2015-12-26T13:15:49Z" data-provider="ArrowHeads" finished-at="2015-12-26T13:15:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.ArrowHead.X_HEAD]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.ArrowHead.X_HEAD]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldSetOnlyXandVEndArrowHead -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="init" is-config="true" duration-ms="0" started-at="2015-12-26T13:15:49Z" finished-at="2015-12-26T13:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="shouldSetOnlyXandVEndArrowHead(com.horstmann.violet.product.diagram.abstracts.property.ArrowHead, com.horstmann.violet.product.diagram.abstracts.property.ArrowHead)[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="shouldSetOnlyXandVEndArrowHead" duration-ms="0" started-at="2015-12-26T13:15:49Z" data-provider="ArrowHeads" finished-at="2015-12-26T13:15:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.ArrowHead.V]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.ArrowHead.V]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldSetOnlyXandVEndArrowHead -->
        <test-method status="PASS" signature="shouldSetOnlyXandVStartArrowHead(com.horstmann.violet.product.diagram.abstracts.property.ArrowHead, com.horstmann.violet.product.diagram.abstracts.property.ArrowHead)[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="shouldSetOnlyXandVStartArrowHead" duration-ms="15" started-at="2015-12-26T13:15:49Z" description="Metoda zezwala wyłącznie na ustawienie X_HEAD inaczej ustawia NONE" data-provider="ArrowHeads" finished-at="2015-12-26T13:15:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.ArrowHead.X_HEAD]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.ArrowHead.X_HEAD]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldSetOnlyXandVStartArrowHead -->
        <test-method status="PASS" signature="shouldSetOnlyXandVEndArrowHead(com.horstmann.violet.product.diagram.abstracts.property.ArrowHead, com.horstmann.violet.product.diagram.abstracts.property.ArrowHead)[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="shouldSetOnlyXandVEndArrowHead" duration-ms="0" started-at="2015-12-26T13:15:49Z" data-provider="ArrowHeads" finished-at="2015-12-26T13:15:49Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.ArrowHead.NONE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldSetOnlyXandVEndArrowHead -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="init" is-config="true" duration-ms="0" started-at="2015-12-26T13:15:49Z" finished-at="2015-12-26T13:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="init" is-config="true" duration-ms="0" started-at="2015-12-26T13:15:49Z" finished-at="2015-12-26T13:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="shouldSetOnlyXandVStartArrowHead(com.horstmann.violet.product.diagram.abstracts.property.ArrowHead, com.horstmann.violet.product.diagram.abstracts.property.ArrowHead)[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="shouldSetOnlyXandVStartArrowHead" duration-ms="0" started-at="2015-12-26T13:15:49Z" description="Metoda zezwala wyłącznie na ustawienie X_HEAD inaczej ustawia NONE" data-provider="ArrowHeads" finished-at="2015-12-26T13:15:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.ArrowHead.BLACK_DIAMOND]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.ArrowHead.NONE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldSetOnlyXandVStartArrowHead -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="init" is-config="true" duration-ms="0" started-at="2015-12-26T13:15:49Z" finished-at="2015-12-26T13:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="shouldSetOnlyXandVStartArrowHead(com.horstmann.violet.product.diagram.abstracts.property.ArrowHead, com.horstmann.violet.product.diagram.abstracts.property.ArrowHead)[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="shouldSetOnlyXandVStartArrowHead" duration-ms="0" started-at="2015-12-26T13:15:49Z" description="Metoda zezwala wyłącznie na ustawienie X_HEAD inaczej ustawia NONE" data-provider="ArrowHeads" finished-at="2015-12-26T13:15:49Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.ArrowHead.NONE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldSetOnlyXandVStartArrowHead -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="init" is-config="true" duration-ms="0" started-at="2015-12-26T13:15:49Z" finished-at="2015-12-26T13:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="shouldSetOnlyXandVStartArrowHead(com.horstmann.violet.product.diagram.abstracts.property.ArrowHead, com.horstmann.violet.product.diagram.abstracts.property.ArrowHead)[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="shouldSetOnlyXandVStartArrowHead" duration-ms="0" started-at="2015-12-26T13:15:49Z" description="Metoda zezwala wyłącznie na ustawienie X_HEAD inaczej ustawia NONE" data-provider="ArrowHeads" finished-at="2015-12-26T13:15:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.ArrowHead.V]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.ArrowHead.V]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldSetOnlyXandVStartArrowHead -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="init" is-config="true" duration-ms="0" started-at="2015-12-26T13:15:49Z" finished-at="2015-12-26T13:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="init" is-config="true" duration-ms="0" started-at="2015-12-26T13:15:49Z" finished-at="2015-12-26T13:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="shouldSetOnlyXandVStartArrowHead(com.horstmann.violet.product.diagram.abstracts.property.ArrowHead, com.horstmann.violet.product.diagram.abstracts.property.ArrowHead)[pri:0, instance:ratajczak.test.XLineEdgeTest@33a10788]" name="shouldSetOnlyXandVStartArrowHead" duration-ms="0" started-at="2015-12-26T13:15:49Z" description="Metoda zezwala wyłącznie na ustawienie X_HEAD inaczej ustawia NONE" data-provider="ArrowHeads" finished-at="2015-12-26T13:15:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.ArrowHead.HALF_V]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.ArrowHead.NONE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldSetOnlyXandVStartArrowHead -->
      </class> <!-- ratajczak.test.XLineEdgeTest -->
    </test> <!-- XLineEdge -->
    <test name="XLineEdgeBeanInfoTest" duration-ms="16" started-at="2015-12-26T12:15:49Z" finished-at="2015-12-26T12:15:49Z">
      <class name="ratajczak.test.XLineEdgeBeanInfoTest">
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeBeanInfoTest@19bb089b]" name="init" is-config="true" duration-ms="0" started-at="2015-12-26T13:15:49Z" finished-at="2015-12-26T13:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="propertDescriptorCheck()[pri:0, instance:ratajczak.test.XLineEdgeBeanInfoTest@19bb089b]" name="propertDescriptorCheck" duration-ms="16" started-at="2015-12-26T13:15:49Z" finished-at="2015-12-26T13:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- propertDescriptorCheck -->
      </class> <!-- ratajczak.test.XLineEdgeBeanInfoTest -->
    </test> <!-- XLineEdgeBeanInfoTest -->
    <test name="ClassDiagramGraph" duration-ms="47" started-at="2015-12-26T12:15:49Z" finished-at="2015-12-26T12:15:49Z">
      <class name="ratajczak.test.ClassDiagramGraphTest">
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.ClassDiagramGraphTest@7e0babb1]" name="init" is-config="true" duration-ms="16" started-at="2015-12-26T13:15:49Z" finished-at="2015-12-26T13:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="ShoulbeClassInEdgeList(java.lang.String, boolean)[pri:0, instance:ratajczak.test.ClassDiagramGraphTest@7e0babb1]" name="ShoulbeClassInEdgeList" duration-ms="0" started-at="2015-12-26T13:15:49Z" data-provider="ProtptypeTest" finished-at="2015-12-26T13:15:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Class Diagram]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShoulbeClassInEdgeList -->
        <test-method status="PASS" signature="ShoulbeClassInEdgeList(java.lang.String, boolean)[pri:0, instance:ratajczak.test.ClassDiagramGraphTest@7e0babb1]" name="ShoulbeClassInEdgeList" duration-ms="0" started-at="2015-12-26T13:15:49Z" data-provider="ProtptypeTest" finished-at="2015-12-26T13:15:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Linia pozioma]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShoulbeClassInEdgeList -->
        <test-method status="PASS" signature="ShoulbeClassInEdgeList(java.lang.String, boolean)[pri:0, instance:ratajczak.test.ClassDiagramGraphTest@7e0babb1]" name="ShoulbeClassInEdgeList" duration-ms="0" started-at="2015-12-26T13:15:49Z" data-provider="ProtptypeTest" finished-at="2015-12-26T13:15:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[<<Extends>>]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShoulbeClassInEdgeList -->
        <test-method status="PASS" signature="ShoulbeClassInEdgeList(java.lang.String, boolean)[pri:0, instance:ratajczak.test.ClassDiagramGraphTest@7e0babb1]" name="ShoulbeClassInEdgeList" duration-ms="0" started-at="2015-12-26T13:15:49Z" data-provider="ProtptypeTest" finished-at="2015-12-26T13:15:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Note connector]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShoulbeClassInEdgeList -->
        <test-method status="PASS" signature="ShoulbeClassInEdgeList(java.lang.String, boolean)[pri:0, instance:ratajczak.test.ClassDiagramGraphTest@7e0babb1]" name="ShoulbeClassInEdgeList" duration-ms="0" started-at="2015-12-26T13:15:49Z" data-provider="ProtptypeTest" finished-at="2015-12-26T13:15:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Artur]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShoulbeClassInEdgeList -->
        <test-method status="PASS" signature="ShoulbeClassInEdgeList(java.lang.String, boolean)[pri:0, instance:ratajczak.test.ClassDiagramGraphTest@7e0babb1]" name="ShoulbeClassInEdgeList" duration-ms="0" started-at="2015-12-26T13:15:49Z" data-provider="ProtptypeTest" finished-at="2015-12-26T13:15:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[<<Create>>]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShoulbeClassInEdgeList -->
        <test-method status="PASS" signature="ShoulbeClassInEdgeList(java.lang.String, boolean)[pri:0, instance:ratajczak.test.ClassDiagramGraphTest@7e0babb1]" name="ShoulbeClassInEdgeList" duration-ms="0" started-at="2015-12-26T13:15:49Z" data-provider="ProtptypeTest" finished-at="2015-12-26T13:15:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[<<Use>>]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShoulbeClassInEdgeList -->
        <test-method status="PASS" signature="ShoulbeClassInEdgeList(java.lang.String, boolean)[pri:0, instance:ratajczak.test.ClassDiagramGraphTest@7e0babb1]" name="ShoulbeClassInEdgeList" duration-ms="0" started-at="2015-12-26T13:15:49Z" data-provider="ProtptypeTest" finished-at="2015-12-26T13:15:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Association Navigability]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShoulbeClassInEdgeList -->
      </class> <!-- ratajczak.test.ClassDiagramGraphTest -->
    </test> <!-- ClassDiagramGraph -->
  </suite> <!-- Suite1 -->
</testng-results>
