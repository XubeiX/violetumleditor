<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="16" passed="16">
  <reporter-output>
  </reporter-output>
  <suite name="Suite1" duration-ms="733" started-at="2015-12-25T16:47:05Z" finished-at="2015-12-25T16:47:06Z">
    <groups>
    </groups>
    <test name="XLineEdge" duration-ms="388" started-at="2015-12-25T16:47:05Z" finished-at="2015-12-25T16:47:06Z">
      <class name="ratajczak.test.XLineEdgeTest">
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@7006c658]" name="init" is-config="true" duration-ms="245" started-at="2015-12-25T17:47:05Z" finished-at="2015-12-25T17:47:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="getEndArrowHeadShouldBeXHEAD()[pri:0, instance:ratajczak.test.XLineEdgeTest@7006c658]" name="getEndArrowHeadShouldBeXHEAD" duration-ms="17" started-at="2015-12-25T17:47:05Z" finished-at="2015-12-25T17:47:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEndArrowHeadShouldBeXHEAD -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@7006c658]" name="init" is-config="true" duration-ms="0" started-at="2015-12-25T17:47:05Z" finished-at="2015-12-25T17:47:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="getLineStyleShouldBeSOLID()[pri:0, instance:ratajczak.test.XLineEdgeTest@7006c658]" name="getLineStyleShouldBeSOLID" duration-ms="4" started-at="2015-12-25T17:47:05Z" finished-at="2015-12-25T17:47:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getLineStyleShouldBeSOLID -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@7006c658]" name="init" is-config="true" duration-ms="7" started-at="2015-12-25T17:47:05Z" finished-at="2015-12-25T17:47:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="getNoExistingLine()[pri:0, instance:ratajczak.test.XLineEdgeTest@7006c658]" name="getNoExistingLine" duration-ms="3" started-at="2015-12-25T17:47:05Z" finished-at="2015-12-25T17:47:05Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.horstmann.violet.product.diagram.classes.edges.XLineEdge.getPointsForNodesOnDifferentLifeLines(XLineEdge.java:55)
	at com.horstmann.violet.product.diagram.classes.edges.XLineEdge.getPoints(XLineEdge.java:50)
	at com.horstmann.violet.product.diagram.classes.edges.XLineEdge.getConnectionPoints(XLineEdge.java:39)
	at ratajczak.test.XLineEdgeTest.getNoExistingLine(XLineEdgeTest.java:80)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:773)
	at org.testng.TestRunner.run(TestRunner.java:623)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1110)
	at org.testng.TestNG.run(TestNG.java:1018)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNoExistingLine -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@7006c658]" name="init" is-config="true" duration-ms="0" started-at="2015-12-25T17:47:05Z" finished-at="2015-12-25T17:47:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="getsAllNoExistingPoints()[pri:0, instance:ratajczak.test.XLineEdgeTest@7006c658]" name="getsAllNoExistingPoints" duration-ms="6" started-at="2015-12-25T17:47:05Z" description="Brak jakichkolwiek punktów by je pobrać" finished-at="2015-12-25T17:47:05Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.horstmann.violet.product.diagram.classes.edges.XLineEdge.getPointsForNodesOnDifferentLifeLines(XLineEdge.java:55)
	at com.horstmann.violet.product.diagram.classes.edges.XLineEdge.getPoints(XLineEdge.java:50)
	at ratajczak.test.XLineEdgeTest.getsAllNoExistingPoints(XLineEdgeTest.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:773)
	at org.testng.TestRunner.run(TestRunner.java:623)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1110)
	at org.testng.TestNG.run(TestNG.java:1018)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getsAllNoExistingPoints -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@7006c658]" name="init" is-config="true" duration-ms="1" started-at="2015-12-25T17:47:05Z" finished-at="2015-12-25T17:47:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="isTransitionPointsSupportedShouldBeFALSE()[pri:0, instance:ratajczak.test.XLineEdgeTest@7006c658]" name="isTransitionPointsSupportedShouldBeFALSE" duration-ms="2" started-at="2015-12-25T17:47:06Z" finished-at="2015-12-25T17:47:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isTransitionPointsSupportedShouldBeFALSE -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@7006c658]" name="init" is-config="true" duration-ms="1" started-at="2015-12-25T17:47:06Z" finished-at="2015-12-25T17:47:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="privateMethodReturnedPointsTest()[pri:0, instance:ratajczak.test.XLineEdgeTest@7006c658]" name="privateMethodReturnedPointsTest" duration-ms="9" started-at="2015-12-25T17:47:06Z" finished-at="2015-12-25T17:47:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- privateMethodReturnedPointsTest -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@7006c658]" name="init" is-config="true" duration-ms="0" started-at="2015-12-25T17:47:06Z" finished-at="2015-12-25T17:47:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="shouldNotChangeLineStyle()[pri:0, instance:ratajczak.test.XLineEdgeTest@7006c658]" name="shouldNotChangeLineStyle" duration-ms="1" started-at="2015-12-25T17:47:06Z" description="Nie powinno dać się zmienić stylu lini" finished-at="2015-12-25T17:47:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldNotChangeLineStyle -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@7006c658]" name="init" is-config="true" duration-ms="0" started-at="2015-12-25T17:47:06Z" finished-at="2015-12-25T17:47:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="shouldSetOnlyXHEDStartArrowHead(com.horstmann.violet.product.diagram.abstracts.property.ArrowHead, com.horstmann.violet.product.diagram.abstracts.property.ArrowHead)[pri:0, instance:ratajczak.test.XLineEdgeTest@7006c658]" name="shouldSetOnlyXHEDStartArrowHead" duration-ms="3" started-at="2015-12-25T17:47:06Z" description="Metoda zezwala wyłącznie na ustawienie X_HEAD inaczej ustawia NONE" data-provider="ArrowHeads" finished-at="2015-12-25T17:47:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.ArrowHead.BLACK_DIAMOND]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.ArrowHead.NONE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldSetOnlyXHEDStartArrowHead -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@7006c658]" name="init" is-config="true" duration-ms="1" started-at="2015-12-25T17:47:06Z" finished-at="2015-12-25T17:47:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="shouldSetOnlyXHEDStartArrowHead(com.horstmann.violet.product.diagram.abstracts.property.ArrowHead, com.horstmann.violet.product.diagram.abstracts.property.ArrowHead)[pri:0, instance:ratajczak.test.XLineEdgeTest@7006c658]" name="shouldSetOnlyXHEDStartArrowHead" duration-ms="1" started-at="2015-12-25T17:47:06Z" description="Metoda zezwala wyłącznie na ustawienie X_HEAD inaczej ustawia NONE" data-provider="ArrowHeads" finished-at="2015-12-25T17:47:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.ArrowHead.X_HEAD]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.ArrowHead.X_HEAD]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldSetOnlyXHEDStartArrowHead -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeTest@7006c658]" name="init" is-config="true" duration-ms="1" started-at="2015-12-25T17:47:06Z" finished-at="2015-12-25T17:47:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="shouldSetOnlyXHEDStartArrowHead(com.horstmann.violet.product.diagram.abstracts.property.ArrowHead, com.horstmann.violet.product.diagram.abstracts.property.ArrowHead)[pri:0, instance:ratajczak.test.XLineEdgeTest@7006c658]" name="shouldSetOnlyXHEDStartArrowHead" duration-ms="1" started-at="2015-12-25T17:47:06Z" description="Metoda zezwala wyłącznie na ustawienie X_HEAD inaczej ustawia NONE" data-provider="ArrowHeads" finished-at="2015-12-25T17:47:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.ArrowHead.HALF_V]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.ArrowHead.NONE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldSetOnlyXHEDStartArrowHead -->
      </class> <!-- ratajczak.test.XLineEdgeTest -->
    </test> <!-- XLineEdge -->
    <test name="XLineEdgeBeanInfoTest" duration-ms="18" started-at="2015-12-25T16:47:06Z" finished-at="2015-12-25T16:47:06Z">
      <class name="ratajczak.test.XLineEdgeBeanInfoTest">
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.XLineEdgeBeanInfoTest@19bb089b]" name="init" is-config="true" duration-ms="1" started-at="2015-12-25T17:47:06Z" finished-at="2015-12-25T17:47:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="propertDescriptorCheck()[pri:0, instance:ratajczak.test.XLineEdgeBeanInfoTest@19bb089b]" name="propertDescriptorCheck" duration-ms="8" started-at="2015-12-25T17:47:06Z" finished-at="2015-12-25T17:47:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- propertDescriptorCheck -->
      </class> <!-- ratajczak.test.XLineEdgeBeanInfoTest -->
    </test> <!-- XLineEdgeBeanInfoTest -->
    <test name="ClassDiagramGraph" duration-ms="225" started-at="2015-12-25T16:47:06Z" finished-at="2015-12-25T16:47:06Z">
      <class name="ratajczak.test.ClassDiagramGraphTest">
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.test.ClassDiagramGraphTest@7e0babb1]" name="init" is-config="true" duration-ms="181" started-at="2015-12-25T17:47:06Z" finished-at="2015-12-25T17:47:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="ShoulbeClassInEdgeList(java.lang.String, boolean)[pri:0, instance:ratajczak.test.ClassDiagramGraphTest@7e0babb1]" name="ShoulbeClassInEdgeList" duration-ms="4" started-at="2015-12-25T17:47:06Z" data-provider="ProtptypeTest" finished-at="2015-12-25T17:47:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Linia pozioma]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShoulbeClassInEdgeList -->
        <test-method status="PASS" signature="ShoulbeClassInEdgeList(java.lang.String, boolean)[pri:0, instance:ratajczak.test.ClassDiagramGraphTest@7e0babb1]" name="ShoulbeClassInEdgeList" duration-ms="1" started-at="2015-12-25T17:47:06Z" data-provider="ProtptypeTest" finished-at="2015-12-25T17:47:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Class Diagram]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShoulbeClassInEdgeList -->
        <test-method status="PASS" signature="ShoulbeClassInEdgeList(java.lang.String, boolean)[pri:0, instance:ratajczak.test.ClassDiagramGraphTest@7e0babb1]" name="ShoulbeClassInEdgeList" duration-ms="2" started-at="2015-12-25T17:47:06Z" data-provider="ProtptypeTest" finished-at="2015-12-25T17:47:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[X Line]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShoulbeClassInEdgeList -->
        <test-method status="PASS" signature="ShoulbeClassInEdgeList(java.lang.String, boolean)[pri:0, instance:ratajczak.test.ClassDiagramGraphTest@7e0babb1]" name="ShoulbeClassInEdgeList" duration-ms="26" started-at="2015-12-25T17:47:06Z" data-provider="ProtptypeTest" finished-at="2015-12-25T17:47:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Artur]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShoulbeClassInEdgeList -->
        <test-method status="PASS" signature="ShoulbeClassInEdgeList(java.lang.String, boolean)[pri:0, instance:ratajczak.test.ClassDiagramGraphTest@7e0babb1]" name="ShoulbeClassInEdgeList" duration-ms="1" started-at="2015-12-25T17:47:06Z" data-provider="ProtptypeTest" finished-at="2015-12-25T17:47:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Note connector]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShoulbeClassInEdgeList -->
      </class> <!-- ratajczak.test.ClassDiagramGraphTest -->
    </test> <!-- ClassDiagramGraph -->
  </suite> <!-- Suite1 -->
</testng-results>
