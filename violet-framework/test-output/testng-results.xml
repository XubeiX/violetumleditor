<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="11" passed="11">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="688" started-at="2016-01-31T12:54:49Z" finished-at="2016-01-31T12:54:49Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="688" started-at="2016-01-31T12:54:49Z" finished-at="2016-01-31T12:54:49Z">
      <class name="ratajczak.artur.AbstractNodeMorphTest">
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.artur.AbstractNodeMorphTest@233c0b17]" name="init" is-config="true" duration-ms="360" started-at="2016-01-31T13:54:49Z" finished-at="2016-01-31T13:54:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="boundsWithSomeText(java.lang.String)[pri:0, instance:ratajczak.artur.AbstractNodeMorphTest@233c0b17]" name="boundsWithSomeText" duration-ms="47" started-at="2016-01-31T13:54:49Z" data-provider="BoundsText" finished-at="2016-01-31T13:54:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[przyklad]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- boundsWithSomeText -->
        <test-method status="PASS" signature="boundsWithSomeText(java.lang.String)[pri:0, instance:ratajczak.artur.AbstractNodeMorphTest@233c0b17]" name="boundsWithSomeText" duration-ms="31" started-at="2016-01-31T13:54:49Z" data-provider="BoundsText" finished-at="2016-01-31T13:54:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[zienna dlugosc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- boundsWithSomeText -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.artur.AbstractNodeMorphTest@233c0b17]" name="init" is-config="true" duration-ms="0" started-at="2016-01-31T13:54:49Z" finished-at="2016-01-31T13:54:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.artur.AbstractNodeMorphTest@233c0b17]" name="init" is-config="true" duration-ms="0" started-at="2016-01-31T13:54:49Z" finished-at="2016-01-31T13:54:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="boundsWithSomeText(java.lang.String)[pri:0, instance:ratajczak.artur.AbstractNodeMorphTest@233c0b17]" name="boundsWithSomeText" duration-ms="15" started-at="2016-01-31T13:54:49Z" data-provider="BoundsText" finished-at="2016-01-31T13:54:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[nowe znaczenie]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- boundsWithSomeText -->
        <test-method status="PASS" signature="boundsWithSomeText(java.lang.String)[pri:0, instance:ratajczak.artur.AbstractNodeMorphTest@233c0b17]" name="boundsWithSomeText" duration-ms="0" started-at="2016-01-31T13:54:49Z" data-provider="BoundsText" finished-at="2016-01-31T13:54:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- boundsWithSomeText -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.artur.AbstractNodeMorphTest@233c0b17]" name="init" is-config="true" duration-ms="0" started-at="2016-01-31T13:54:49Z" finished-at="2016-01-31T13:54:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="boundsWithSomeText(java.lang.String)[pri:0, instance:ratajczak.artur.AbstractNodeMorphTest@233c0b17]" name="boundsWithSomeText" duration-ms="78" started-at="2016-01-31T13:54:49Z" data-provider="BoundsText" finished-at="2016-01-31T13:54:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A co mi tam]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- boundsWithSomeText -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.artur.AbstractNodeMorphTest@233c0b17]" name="init" is-config="true" duration-ms="0" started-at="2016-01-31T13:54:49Z" finished-at="2016-01-31T13:54:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.artur.AbstractNodeMorphTest@233c0b17]" name="init" is-config="true" duration-ms="0" started-at="2016-01-31T13:54:49Z" finished-at="2016-01-31T13:54:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="cloneTest()[pri:0, instance:ratajczak.artur.AbstractNodeMorphTest@233c0b17]" name="cloneTest" duration-ms="0" started-at="2016-01-31T13:54:49Z" finished-at="2016-01-31T13:54:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cloneTest -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.artur.AbstractNodeMorphTest@233c0b17]" name="init" is-config="true" duration-ms="0" started-at="2016-01-31T13:54:49Z" finished-at="2016-01-31T13:54:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="constructionTest()[pri:0, instance:ratajczak.artur.AbstractNodeMorphTest@233c0b17]" name="constructionTest" duration-ms="0" started-at="2016-01-31T13:54:49Z" finished-at="2016-01-31T13:54:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructionTest -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.artur.AbstractNodeMorphTest@233c0b17]" name="init" is-config="true" duration-ms="0" started-at="2016-01-31T13:54:49Z" finished-at="2016-01-31T13:54:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="morphValuTest(com.horstmann.violet.product.diagram.abstracts.property.Morph, boolean)[pri:0, instance:ratajczak.artur.AbstractNodeMorphTest@233c0b17]" name="morphValuTest" duration-ms="15" started-at="2016-01-31T13:54:49Z" data-provider="Morph" finished-at="2016-01-31T13:54:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.Morph.TOINTERFACE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- morphValuTest -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.artur.AbstractNodeMorphTest@233c0b17]" name="init" is-config="true" duration-ms="0" started-at="2016-01-31T13:54:49Z" finished-at="2016-01-31T13:54:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="morphValuTest(com.horstmann.violet.product.diagram.abstracts.property.Morph, boolean)[pri:0, instance:ratajczak.artur.AbstractNodeMorphTest@233c0b17]" name="morphValuTest" duration-ms="0" started-at="2016-01-31T13:54:49Z" data-provider="Morph" finished-at="2016-01-31T13:54:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.Morph.TOCLASS]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- morphValuTest -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.artur.AbstractNodeMorphTest@233c0b17]" name="init" is-config="true" duration-ms="0" started-at="2016-01-31T13:54:49Z" finished-at="2016-01-31T13:54:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="nameIsLargeAndJustyfy()[pri:0, instance:ratajczak.artur.AbstractNodeMorphTest@233c0b17]" name="nameIsLargeAndJustyfy" duration-ms="16" started-at="2016-01-31T13:54:49Z" finished-at="2016-01-31T13:54:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameIsLargeAndJustyfy -->
        <test-method status="PASS" signature="morphValuTest(com.horstmann.violet.product.diagram.abstracts.property.Morph, boolean)[pri:0, instance:ratajczak.artur.AbstractNodeMorphTest@233c0b17]" name="morphValuTest" duration-ms="0" started-at="2016-01-31T13:54:49Z" data-provider="Morph" finished-at="2016-01-31T13:54:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.horstmann.violet.product.diagram.abstracts.property.Morph.ABSTRACT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- morphValuTest -->
        <test-method status="PASS" signature="init()[pri:0, instance:ratajczak.artur.AbstractNodeMorphTest@233c0b17]" name="init" is-config="true" duration-ms="0" started-at="2016-01-31T13:54:49Z" finished-at="2016-01-31T13:54:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
      </class> <!-- ratajczak.artur.AbstractNodeMorphTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
